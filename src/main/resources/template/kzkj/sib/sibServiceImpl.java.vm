package com.ideal.hos.${cfg.modelName}.${cfg.childModelName}.${cfg.cgildPhth}.service${cfg.sonPath}.impl;

import com.ideal.hos.${cfg.childModelName}.client.${cfg.cgildPhth}.dto${cfg.sonPath}.${entity}DTO;
import com.ideal.hos.${cfg.childModelName}.client.${cfg.cgildPhth}.dto${cfg.sonPath}.${entity}PageRequestDTO;
import com.ideal.hos.${cfg.childModelName}.client.${cfg.cgildPhth}.dto${cfg.sonPath}.${entity}RequestDTO;
import com.ideal.hos.${cfg.childModelName}.client.${cfg.cgildPhth}.service${cfg.sonPath}.I${entity}ApiService;
import com.ideal.hos.common.common.CommonPage;
import com.ideal.hos.${cfg.modelName}.${cfg.childModelName}.${cfg.cgildPhth}.convert${cfg.sonPath}.${entity}Convert;
import com.ideal.hos.${cfg.modelName}.${cfg.childModelName}.${cfg.cgildPhth}.param${cfg.sonPath}.${entity}PageParam;
import com.ideal.hos.${cfg.modelName}.${cfg.childModelName}.${cfg.cgildPhth}.param${cfg.sonPath}.${entity}Param;
import com.ideal.hos.${cfg.modelName}.${cfg.childModelName}.${cfg.cgildPhth}.service${cfg.sonPath}.${entity}SibService;
import com.ideal.hos.${cfg.modelName}.${cfg.childModelName}.${cfg.cgildPhth}.vo${cfg.sonPath}.${entity}VO;
import org.springframework.stereotype.Service;
import org.springframework.util.ObjectUtils;

import javax.annotation.Resource;
import java.util.List;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
public class ${entity}SibServiceImpl implements ${entity}SibService {

    @Resource
    private I${entity}ApiService ${table.entityPath}ApiService;
    @Override
    public Boolean save${entity}(${entity}Param ${table.entityPath}Param) {
        ${entity}RequestDTO ${table.entityPath}RequestDto = ${entity}Convert.INSTANCE.paramToRequestDto(${table.entityPath}Param);
        ${table.entityPath}ApiService.save${entity}(${table.entityPath}RequestDto);
        return Boolean.TRUE;
    }
    @Override
    public Boolean saveBatch${entity}(List<${entity}Param> ${table.entityPath}ParamList) {
        List<${entity}RequestDTO> ${table.entityPath}RequestDtoList = ${entity}Convert.INSTANCE.paramToRequestDto(${table.entityPath}ParamList);
        ${table.entityPath}ApiService.saveBatch${entity}(${table.entityPath}RequestDtoList);
        return Boolean.TRUE;
    }

    @Override
    public Boolean update${entity}ById(${entity}Param ${table.entityPath}Param) {
        ${entity}RequestDTO ${table.entityPath}RequestDto = ${entity}Convert.INSTANCE.paramToRequestDto(${table.entityPath}Param);
        return ${table.entityPath}ApiService.update${entity}ById(${table.entityPath}RequestDto);
    }
    @Override
    public Boolean saveOrUpdate${entity}(${entity}Param ${table.entityPath}Param) {
        Long id = ${table.entityPath}Param.getId();
        if (ObjectUtils.isEmpty(id)) {
            return save${entity}(${table.entityPath}Param);
        } else {
            return update${entity}ById(${table.entityPath}Param);
        }
    }

    @Override
    public Boolean deleteByIds(List<Long> ids) {
        return ${table.entityPath}ApiService.deleteByIds(ids);
    }

    @Override
    public ${entity}VO get${entity}VoById(${entity}Param ${table.entityPath}Param) {
        ${entity}DTO ${table.entityPath}Dto =  ${table.entityPath}ApiService.get${entity}VoById(${table.entityPath}Param.getId());
        return  ${entity}Convert.INSTANCE.dtoToVo(${table.entityPath}Dto);
    }

    @Override
    public List<${entity}VO> findListByCondition(${entity}Param ${table.entityPath}Param) {
        ${entity}RequestDTO ${table.entityPath}RequestDto = ${entity}Convert.INSTANCE.paramToRequestDto(${table.entityPath}Param);
        List<${entity}DTO> ${table.entityPath}DtoList = ${table.entityPath}ApiService.findListByCondition(${table.entityPath}RequestDto);
        return ${entity}Convert.INSTANCE.dtoToVo(${table.entityPath}DtoList);
    }

    @Override
    public CommonPage<${entity}VO> pageList(${entity}PageParam ${table.entityPath}PageParam) {
        ${entity}PageRequestDTO ${table.entityPath}PageRequestDto = ${entity}Convert.INSTANCE.pageParamToPageRequestDto(${table.entityPath}PageParam);
        CommonPage<${entity}DTO> result = ${table.entityPath}ApiService.pageList(${table.entityPath}PageRequestDto);
        return CommonPage.restPage(result, ${entity}Convert.INSTANCE.dtoToVo(result.getRecords()));
    }
}
